/*
* generated by Xtext
*/
grammar InternalRelaxng;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.oasisopen.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.oasisopen.parser.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.xtext.conversion.ValueConverterException;
import org.oasisopen.services.RelaxngGrammarAccess;

}

@parser::members {
 
 	private RelaxngGrammarAccess grammarAccess;
 	
    public InternalRelaxngParser(TokenStream input, IAstFactory factory, RelaxngGrammarAccess grammarAccess) {
        this(input);
        this.factory = factory;
        registerRules(grammarAccess.getGrammar());
        this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected InputStream getTokenFile() {
    	ClassLoader classLoader = getClass().getClassLoader();
    	return classLoader.getResourceAsStream("org/oasisopen/parser/antlr/internal/InternalRelaxng.tokens");
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "TopLevel";	
   	} 
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleTopLevel
entryRuleTopLevel returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getTopLevelRule(), currentNode); }
	 iv_ruleTopLevel=ruleTopLevel 
	 { $current=$iv_ruleTopLevel.current; } 
	 EOF 
;

// Rule TopLevel
ruleTopLevel returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getTopLevelAccess().getDeclsDeclParserRuleCall_0_0(), currentNode); 
	    }
	    lv_decls_0=ruleDecl 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTopLevelRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "decls", lv_decls_0, "Decl", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*((	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getTopLevelAccess().getPatternPatternParserRuleCall_1_0_0(), currentNode); 
	    }
	    lv_pattern_1=rulePattern 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTopLevelRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "pattern", lv_pattern_1, "Pattern", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)
    |(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getTopLevelAccess().getGrammarContentGrammarContentParserRuleCall_1_1_0(), currentNode); 
	    }
	    lv_grammarContent_2=ruleGrammarContent 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTopLevelRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "grammarContent", lv_grammarContent_2, "GrammarContent", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*));





// Entry rule entryRuleDecl
entryRuleDecl returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getDeclRule(), currentNode); }
	 iv_ruleDecl=ruleDecl 
	 { $current=$iv_ruleDecl.current; } 
	 EOF 
;

// Rule Decl
ruleDecl returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(('namespace' 
    {
        createLeafNode(grammarAccess.getDeclAccess().getNamespaceKeyword_0_0(), null); 
    }
(	
	
	    lv_prefix_1=	RULE_ID
	{
		createLeafNode(grammarAccess.getDeclAccess().getPrefixIDTerminalRuleCall_0_1_0(), "prefix"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "prefix", lv_prefix_1, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)'=' 
    {
        createLeafNode(grammarAccess.getDeclAccess().getEqualsSignKeyword_0_2(), null); 
    }
(	
	
	    lv_uri_3=	RULE_STRING
	{
		createLeafNode(grammarAccess.getDeclAccess().getUriSTRINGTerminalRuleCall_0_3_0(), "uri"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "uri", lv_uri_3, "STRING", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
))
    |('default' 
    {
        createLeafNode(grammarAccess.getDeclAccess().getDefaultKeyword_1_0(), null); 
    }
'namespace' 
    {
        createLeafNode(grammarAccess.getDeclAccess().getNamespaceKeyword_1_1(), null); 
    }
(	
	
	    lv_prefix_6=	RULE_ID
	{
		createLeafNode(grammarAccess.getDeclAccess().getPrefixIDTerminalRuleCall_1_2_0(), "prefix"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "prefix", lv_prefix_6, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)'=' 
    {
        createLeafNode(grammarAccess.getDeclAccess().getEqualsSignKeyword_1_3(), null); 
    }
(	
	
	    lv_uri_8=	RULE_STRING
	{
		createLeafNode(grammarAccess.getDeclAccess().getUriSTRINGTerminalRuleCall_1_4_0(), "uri"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "uri", lv_uri_8, "STRING", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
))
    |('datatypes' 
    {
        createLeafNode(grammarAccess.getDeclAccess().getDatatypesKeyword_2_0(), null); 
    }
(	
	
	    lv_datatypeId_10=	RULE_ID
	{
		createLeafNode(grammarAccess.getDeclAccess().getDatatypeIdIDTerminalRuleCall_2_1_0(), "datatypeId"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "datatypeId", lv_datatypeId_10, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)'=' 
    {
        createLeafNode(grammarAccess.getDeclAccess().getEqualsSignKeyword_2_2(), null); 
    }
(	
	
	    lv_value_12=	RULE_STRING
	{
		createLeafNode(grammarAccess.getDeclAccess().getValueSTRINGTerminalRuleCall_2_3_0(), "value"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDeclRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "value", lv_value_12, "STRING", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)));





// Entry rule entryRulePattern
entryRulePattern returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getPatternRule(), currentNode); }
	 iv_rulePattern=rulePattern 
	 { $current=$iv_rulePattern.current; } 
	 EOF 
;

// Rule Pattern
rulePattern returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	
	
	    lv_val_0=(	{ 
        currentNode=createCompositeNode(grammarAccess.getPatternAccess().getValElementParserRuleCall_0_0_0(), currentNode); 
    }
	ruleElement	{ 
        currentNode = currentNode.getParent();
    }

    |	{ 
        currentNode=createCompositeNode(grammarAccess.getPatternAccess().getValAttributeParserRuleCall_0_0_1(), currentNode); 
    }
	ruleAttribute	{ 
        currentNode = currentNode.getParent();
    }
)
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPatternRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "val", lv_val_0, null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)+
    |('list' 
    {
        createLeafNode(grammarAccess.getPatternAccess().getListKeyword_1_0(), null); 
    }
'{' 
    {
        createLeafNode(grammarAccess.getPatternAccess().getLeftCurlyBracketKeyword_1_1(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getPatternAccess().getPatternPatternParserRuleCall_1_2_0(), currentNode); 
	    }
	    lv_pattern_3=rulePattern 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPatternRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "pattern", lv_pattern_3, "Pattern", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*'}' 
    {
        createLeafNode(grammarAccess.getPatternAccess().getRightCurlyBracketKeyword_1_3(), null); 
    }
)
    |('mixed' 
    {
        createLeafNode(grammarAccess.getPatternAccess().getMixedKeyword_2_0(), null); 
    }
'{' 
    {
        createLeafNode(grammarAccess.getPatternAccess().getLeftCurlyBracketKeyword_2_1(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getPatternAccess().getPatternPatternParserRuleCall_2_2_0(), currentNode); 
	    }
	    lv_pattern_7=rulePattern 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPatternRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "pattern", lv_pattern_7, "Pattern", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*'}' 
    {
        createLeafNode(grammarAccess.getPatternAccess().getRightCurlyBracketKeyword_2_3(), null); 
    }
)
    |(RULE_ID
    { 
    createLeafNode(grammarAccess.getPatternAccess().getIDTerminalRuleCall_3_0(), null); 
    }
('=' 
    {
        createLeafNode(grammarAccess.getPatternAccess().getEqualsSignKeyword_3_1(), null); 
    }
)?)
    |('parent' 
    {
        createLeafNode(grammarAccess.getPatternAccess().getParentKeyword_4_0(), null); 
    }
RULE_ID
    { 
    createLeafNode(grammarAccess.getPatternAccess().getIDTerminalRuleCall_4_1(), null); 
    }
)
    |'empty' 
    {
        createLeafNode(grammarAccess.getPatternAccess().getEmptyKeyword_5(), null); 
    }

    |'text' 
    {
        createLeafNode(grammarAccess.getPatternAccess().getTextKeyword_6(), null); 
    }

    |'|' 
    {
        createLeafNode(grammarAccess.getPatternAccess().getVerticalLineKeyword_7(), null); 
    }

    |(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getPatternAccess().getValueDataTypeValueParserRuleCall_8_0(), currentNode); 
	    }
	    lv_value_16=ruleDataTypeValue 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPatternRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "value", lv_value_16, "DataTypeValue", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)+
    |(ruleDataTypeName('{' 
    {
        createLeafNode(grammarAccess.getPatternAccess().getLeftCurlyBracketKeyword_9_1_0(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getPatternAccess().getParamParamParserRuleCall_9_1_1_0(), currentNode); 
	    }
	    lv_param_19=ruleParam 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPatternRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "param", lv_param_19, "Param", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*'}' 
    {
        createLeafNode(grammarAccess.getPatternAccess().getRightCurlyBracketKeyword_9_1_2(), null); 
    }
)*(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getPatternAccess().getExceptPatternExceptPatternParserRuleCall_9_2_0(), currentNode); 
	    }
	    lv_exceptPattern_21=ruleExceptPattern 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPatternRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "exceptPattern", lv_exceptPattern_21, "ExceptPattern", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*)
    |'notAllowed' 
    {
        createLeafNode(grammarAccess.getPatternAccess().getNotAllowedKeyword_10(), null); 
    }

    |('external' 
    {
        createLeafNode(grammarAccess.getPatternAccess().getExternalKeyword_11_0(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getPatternAccess().getUriAnyURILiteralParserRuleCall_11_1_0(), currentNode); 
	    }
	    lv_uri_24=ruleAnyURILiteral 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPatternRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "uri", lv_uri_24, "AnyURILiteral", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getPatternAccess().getInheritInheritParserRuleCall_11_2_0(), currentNode); 
	    }
	    lv_inherit_25=ruleInherit 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPatternRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "inherit", lv_inherit_25, "Inherit", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*)
    |('grammar' 
    {
        createLeafNode(grammarAccess.getPatternAccess().getGrammarKeyword_12_0(), null); 
    }
'{' 
    {
        createLeafNode(grammarAccess.getPatternAccess().getLeftCurlyBracketKeyword_12_1(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getPatternAccess().getGrammarContentGrammarContentParserRuleCall_12_2_0(), currentNode); 
	    }
	    lv_grammarContent_28=ruleGrammarContent 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPatternRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "grammarContent", lv_grammarContent_28, "GrammarContent", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*'}' 
    {
        createLeafNode(grammarAccess.getPatternAccess().getRightCurlyBracketKeyword_12_3(), null); 
    }
)
    |('(' 
    {
        createLeafNode(grammarAccess.getPatternAccess().getLeftParenthesisKeyword_13_0(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getPatternAccess().getGroupPatternParserRuleCall_13_1_0(), currentNode); 
	    }
	    lv_group_31=rulePattern 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPatternRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "group", lv_group_31, "Pattern", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*')' 
    {
        createLeafNode(grammarAccess.getPatternAccess().getRightParenthesisKeyword_13_2(), null); 
    }
(	
	
	    lv_continue_33=',' 
    {
        createLeafNode(grammarAccess.getPatternAccess().getContinueCommaKeyword_13_3_0(), "continue"); 
    }

 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPatternRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "continue", /* lv_continue_33 */ input.LT(-1), ",", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)?));





// Entry rule entryRuleElement
entryRuleElement returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getElementRule(), currentNode); }
	 iv_ruleElement=ruleElement 
	 { $current=$iv_ruleElement.current; } 
	 EOF 
;

// Rule Element
ruleElement returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('element' 
    {
        createLeafNode(grammarAccess.getElementAccess().getElementKeyword_0(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getElementAccess().getNameNameClassParserRuleCall_1_0(), currentNode); 
	    }
	    lv_name_1=ruleNameClass 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getElementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_1, "NameClass", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)'{' 
    {
        createLeafNode(grammarAccess.getElementAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getElementAccess().getPatternPatternParserRuleCall_3_0(), currentNode); 
	    }
	    lv_pattern_3=rulePattern 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getElementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "pattern", lv_pattern_3, "Pattern", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*'}' 
    {
        createLeafNode(grammarAccess.getElementAccess().getRightCurlyBracketKeyword_4(), null); 
    }
(	
	
	    lv_cardinality_5=('?' 
    {
        createLeafNode(grammarAccess.getElementAccess().getCardinalityQuestionMarkKeyword_5_0_0(), "cardinality"); 
    }


    |'+' 
    {
        createLeafNode(grammarAccess.getElementAccess().getCardinalityPlusSignKeyword_5_0_1(), "cardinality"); 
    }


    |'*' 
    {
        createLeafNode(grammarAccess.getElementAccess().getCardinalityAsteriskKeyword_5_0_2(), "cardinality"); 
    }

)
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getElementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "cardinality", /* lv_cardinality_5 */ input.LT(-1), null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)?(	
	
	    lv_continue_6=(',' 
    {
        createLeafNode(grammarAccess.getElementAccess().getContinueCommaKeyword_6_0_0(), "continue"); 
    }


    |'&' 
    {
        createLeafNode(grammarAccess.getElementAccess().getContinueAmpersandKeyword_6_0_1(), "continue"); 
    }


    |'|' 
    {
        createLeafNode(grammarAccess.getElementAccess().getContinueVerticalLineKeyword_6_0_2(), "continue"); 
    }

)
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getElementRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "continue", /* lv_continue_6 */ input.LT(-1), null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)?);





// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getAttributeRule(), currentNode); }
	 iv_ruleAttribute=ruleAttribute 
	 { $current=$iv_ruleAttribute.current; } 
	 EOF 
;

// Rule Attribute
ruleAttribute returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('attribute' 
    {
        createLeafNode(grammarAccess.getAttributeAccess().getAttributeKeyword_0(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getAttributeAccess().getNameNameClassParserRuleCall_1_0(), currentNode); 
	    }
	    lv_name_1=ruleNameClass 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAttributeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_1, "NameClass", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)'{' 
    {
        createLeafNode(grammarAccess.getAttributeAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getAttributeAccess().getPatternPatternParserRuleCall_3_0(), currentNode); 
	    }
	    lv_pattern_3=rulePattern 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAttributeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "pattern", lv_pattern_3, "Pattern", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*'}' 
    {
        createLeafNode(grammarAccess.getAttributeAccess().getRightCurlyBracketKeyword_4(), null); 
    }
(	
	
	    lv_cardinality_5='?' 
    {
        createLeafNode(grammarAccess.getAttributeAccess().getCardinalityQuestionMarkKeyword_5_0(), "cardinality"); 
    }

 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAttributeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "cardinality", /* lv_cardinality_5 */ input.LT(-1), "?", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)?(	
	
	    lv_continue_6=(',' 
    {
        createLeafNode(grammarAccess.getAttributeAccess().getContinueCommaKeyword_6_0_0(), "continue"); 
    }


    |'|' 
    {
        createLeafNode(grammarAccess.getAttributeAccess().getContinueVerticalLineKeyword_6_0_1(), "continue"); 
    }

)
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAttributeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "continue", /* lv_continue_6 */ input.LT(-1), null, lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)?);





// Entry rule entryRuleParam
entryRuleParam returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getParamRule(), currentNode); }
	 iv_ruleParam=ruleParam 
	 { $current=$iv_ruleParam.current; } 
	 EOF 
;

// Rule Param
ruleParam returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getParamAccess().getIdentifierOrKeyWordParserRuleCall_0(), currentNode); 
    }
    this_IdentifierOrKeyWord_0=ruleIdentifierOrKeyWord
    { 
        $current = $this_IdentifierOrKeyWord_0.current; 
        currentNode = currentNode.getParent();
    }
'=' 
    {
        createLeafNode(grammarAccess.getParamAccess().getEqualsSignKeyword_1(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getParamAccess().getParmValueLiteralParserRuleCall_2_0(), currentNode); 
	    }
	    lv_parmValue_2=ruleLiteral 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getParamRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "parmValue", lv_parmValue_2, "Literal", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
));





// Entry rule entryRuleExceptPattern
entryRuleExceptPattern returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getExceptPatternRule(), currentNode); }
	 iv_ruleExceptPattern=ruleExceptPattern 
	 { $current=$iv_ruleExceptPattern.current; } 
	 EOF 
;

// Rule ExceptPattern
ruleExceptPattern returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('-' 
    {
        createLeafNode(grammarAccess.getExceptPatternAccess().getHyphenMinusKeyword_0(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getExceptPatternAccess().getPatternParserRuleCall_1(), currentNode); 
    }
    this_Pattern_1=rulePattern
    { 
        $current = $this_Pattern_1.current; 
        currentNode = currentNode.getParent();
    }
);





// Entry rule entryRuleGrammarContent
entryRuleGrammarContent returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getGrammarContentRule(), currentNode); }
	 iv_ruleGrammarContent=ruleGrammarContent 
	 { $current=$iv_ruleGrammarContent.current; } 
	 EOF 
;

// Rule GrammarContent
ruleGrammarContent returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getGrammarContentAccess().getStartParserRuleCall_0(), currentNode); 
    }
    this_Start_0=ruleStart
    { 
        $current = $this_Start_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getGrammarContentAccess().getDefineParserRuleCall_1(), currentNode); 
    }
    this_Define_1=ruleDefine
    { 
        $current = $this_Define_1.current; 
        currentNode = currentNode.getParent();
    }

    |('div' 
    {
        createLeafNode(grammarAccess.getGrammarContentAccess().getDivKeyword_2_0(), null); 
    }
'{' 
    {
        createLeafNode(grammarAccess.getGrammarContentAccess().getLeftCurlyBracketKeyword_2_1(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getGrammarContentAccess().getGrammarContenGrammarContentGrammarContentParserRuleCall_2_2_0(), currentNode); 
	    }
	    lv_grammarContenGrammarContent_4=ruleGrammarContent 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getGrammarContentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "grammarContenGrammarContent", lv_grammarContenGrammarContent_4, "GrammarContent", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*'}' 
    {
        createLeafNode(grammarAccess.getGrammarContentAccess().getRightCurlyBracketKeyword_2_3(), null); 
    }
)
    |('include' 
    {
        createLeafNode(grammarAccess.getGrammarContentAccess().getIncludeKeyword_3_0(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getGrammarContentAccess().getAnyURILiteralParserRuleCall_3_1(), currentNode); 
    }
    this_AnyURILiteral_7=ruleAnyURILiteral
    { 
        $current = $this_AnyURILiteral_7.current; 
        currentNode = currentNode.getParent();
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getGrammarContentAccess().getInheritInheritParserRuleCall_3_2_0(), currentNode); 
	    }
	    lv_inherit_8=ruleInherit 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getGrammarContentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "inherit", lv_inherit_8, "Inherit", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)('{' 
    {
        createLeafNode(grammarAccess.getGrammarContentAccess().getLeftCurlyBracketKeyword_3_3_0(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getGrammarContentAccess().getIncludeContentIncludeContentParserRuleCall_3_3_1_0(), currentNode); 
	    }
	    lv_includeContent_10=ruleIncludeContent 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getGrammarContentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "includeContent", lv_includeContent_10, "IncludeContent", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*'}' 
    {
        createLeafNode(grammarAccess.getGrammarContentAccess().getRightCurlyBracketKeyword_3_3_2(), null); 
    }
)));





// Entry rule entryRuleIncludeContent
entryRuleIncludeContent returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getIncludeContentRule(), currentNode); }
	 iv_ruleIncludeContent=ruleIncludeContent 
	 { $current=$iv_ruleIncludeContent.current; } 
	 EOF 
;

// Rule IncludeContent
ruleIncludeContent returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getIncludeContentAccess().getDefineParserRuleCall_0(), currentNode); 
    }
    this_Define_0=ruleDefine
    { 
        $current = $this_Define_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getIncludeContentAccess().getStartParserRuleCall_1(), currentNode); 
    }
    this_Start_1=ruleStart
    { 
        $current = $this_Start_1.current; 
        currentNode = currentNode.getParent();
    }

    |('div' 
    {
        createLeafNode(grammarAccess.getIncludeContentAccess().getDivKeyword_2_0(), null); 
    }
'{' 
    {
        createLeafNode(grammarAccess.getIncludeContentAccess().getLeftCurlyBracketKeyword_2_1(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getIncludeContentAccess().getIncludeGrammarContentGrammarContentParserRuleCall_2_2_0(), currentNode); 
	    }
	    lv_includeGrammarContent_4=ruleGrammarContent 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getIncludeContentRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "includeGrammarContent", lv_includeGrammarContent_4, "GrammarContent", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*'}' 
    {
        createLeafNode(grammarAccess.getIncludeContentAccess().getRightCurlyBracketKeyword_2_3(), null); 
    }
));





// Entry rule entryRuleStart
entryRuleStart returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getStartRule(), currentNode); }
	 iv_ruleStart=ruleStart 
	 { $current=$iv_ruleStart.current; } 
	 EOF 
;

// Rule Start
ruleStart returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('start' 
    {
        createLeafNode(grammarAccess.getStartAccess().getStartKeyword_0(), null); 
    }
('=' 
    {
        createLeafNode(grammarAccess.getStartAccess().getEqualsSignKeyword_1_0(), null); 
    }

    |'|=' 
    {
        createLeafNode(grammarAccess.getStartAccess().getVerticalLineEqualsSignKeyword_1_1(), null); 
    }

    |'&=' 
    {
        createLeafNode(grammarAccess.getStartAccess().getAmpersandEqualsSignKeyword_1_2(), null); 
    }
)(RULE_ID
    { 
    createLeafNode(grammarAccess.getStartAccess().getIDTerminalRuleCall_2_0(), null); 
    }

    |(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getStartAccess().getPatternPatternParserRuleCall_2_1_0(), currentNode); 
	    }
	    lv_pattern_5=rulePattern 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStartRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "pattern", lv_pattern_5, "Pattern", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)));





// Entry rule entryRuleDefine
entryRuleDefine returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getDefineRule(), currentNode); }
	 iv_ruleDefine=ruleDefine 
	 { $current=$iv_ruleDefine.current; } 
	 EOF 
;

// Rule Define
ruleDefine returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(RULE_ID
    { 
    createLeafNode(grammarAccess.getDefineAccess().getIDTerminalRuleCall_0(), null); 
    }
('=' 
    {
        createLeafNode(grammarAccess.getDefineAccess().getEqualsSignKeyword_1_0(), null); 
    }

    |'|=' 
    {
        createLeafNode(grammarAccess.getDefineAccess().getVerticalLineEqualsSignKeyword_1_1(), null); 
    }

    |'&=' 
    {
        createLeafNode(grammarAccess.getDefineAccess().getAmpersandEqualsSignKeyword_1_2(), null); 
    }
)(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getDefineAccess().getPatternPatternParserRuleCall_2_0(), currentNode); 
	    }
	    lv_pattern_4=rulePattern 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDefineRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "pattern", lv_pattern_4, "Pattern", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
));





// Entry rule entryRuleName
entryRuleName returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getNameRule(), currentNode); }
	 iv_ruleName=ruleName 
	 { $current=$iv_ruleName.current; } 
	 EOF 
;

// Rule Name
ruleName returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getNameAccess().getIdentifierOrKeyWordParserRuleCall_0(), currentNode); 
    }
    this_IdentifierOrKeyWord_0=ruleIdentifierOrKeyWord
    { 
        $current = $this_IdentifierOrKeyWord_0.current; 
        currentNode = currentNode.getParent();
    }

    |ruleCName);





// Entry rule entryRuleExceptNameClass
entryRuleExceptNameClass returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getExceptNameClassRule(), currentNode); }
	 iv_ruleExceptNameClass=ruleExceptNameClass 
	 { $current=$iv_ruleExceptNameClass.current; } 
	 EOF 
;

// Rule ExceptNameClass
ruleExceptNameClass returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('-' 
    {
        createLeafNode(grammarAccess.getExceptNameClassAccess().getHyphenMinusKeyword_0(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getExceptNameClassAccess().getNameClassParserRuleCall_1(), currentNode); 
    }
    this_NameClass_1=ruleNameClass
    { 
        $current = $this_NameClass_1.current; 
        currentNode = currentNode.getParent();
    }
);





// Entry rule entryRuleNameClass
entryRuleNameClass returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getNameClassRule(), currentNode); }
	 iv_ruleNameClass=ruleNameClass 
	 { $current=$iv_ruleNameClass.current; } 
	 EOF 
;

// Rule NameClass
ruleNameClass returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getNameClassAccess().getNameParserRuleCall_0(), currentNode); 
    }
    this_Name_0=ruleName
    { 
        $current = $this_Name_0.current; 
        currentNode = currentNode.getParent();
    }

    |(RULE_ID
    { 
    createLeafNode(grammarAccess.getNameClassAccess().getIDTerminalRuleCall_1_0(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getNameClassAccess().getExceptClassNameExceptNameClassParserRuleCall_1_1_0(), currentNode); 
	    }
	    lv_exceptClassName_2=ruleExceptNameClass 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNameClassRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "exceptClassName", lv_exceptClassName_2, "ExceptNameClass", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)?)
    |(
    { 
        currentNode=createCompositeNode(grammarAccess.getNameClassAccess().getAnyNameParserRuleCall_2_0(), currentNode); 
    }
    this_AnyName_3=ruleAnyName
    { 
        $current = $this_AnyName_3.current; 
        currentNode = currentNode.getParent();
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getNameClassAccess().getExceptClassNameExceptNameClassParserRuleCall_2_1_0(), currentNode); 
	    }
	    lv_exceptClassName_4=ruleExceptNameClass 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNameClassRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "exceptClassName", lv_exceptClassName_4, "ExceptNameClass", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)?)
    |('|' 
    {
        createLeafNode(grammarAccess.getNameClassAccess().getVerticalLineKeyword_3_0(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getNameClassAccess().getNcNameClassParserRuleCall_3_1_0(), currentNode); 
	    }
	    lv_nc_6=ruleNameClass 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNameClassRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "nc", lv_nc_6, "NameClass", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))
    |('(' 
    {
        createLeafNode(grammarAccess.getNameClassAccess().getLeftParenthesisKeyword_4_0(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getNameClassAccess().getNcNameClassParserRuleCall_4_1_0(), currentNode); 
	    }
	    lv_nc_8=ruleNameClass 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNameClassRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "nc", lv_nc_8, "NameClass", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)')' 
    {
        createLeafNode(grammarAccess.getNameClassAccess().getRightParenthesisKeyword_4_2(), null); 
    }
));





// Entry rule entryRuleDataTypeName
entryRuleDataTypeName returns [String current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getDataTypeNameRule(), currentNode); } 
	 iv_ruleDataTypeName=ruleDataTypeName 
	 { $current=$iv_ruleDataTypeName.current.getText(); }  
	 EOF 
;

// Rule DataTypeName
ruleDataTypeName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
	    lastConsumedDatatypeToken = $current;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getDataTypeNameAccess().getCNameParserRuleCall_0(), currentNode); 
    }
    this_CName_0=ruleCName    {
		$current.merge(this_CName_0);
    }

    { 
        currentNode = currentNode.getParent();
    }

    |
	kw='string' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getDataTypeNameAccess().getStringKeyword_1(), null); 
    }

    |
	kw='token' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getDataTypeNameAccess().getTokenKeyword_2(), null); 
    }
)
    ;





// Entry rule entryRuleDataTypeValue
entryRuleDataTypeValue returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getDataTypeValueRule(), currentNode); }
	 iv_ruleDataTypeValue=ruleDataTypeValue 
	 { $current=$iv_ruleDataTypeValue.current; } 
	 EOF 
;

// Rule DataTypeValue
ruleDataTypeValue returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:

    { 
        currentNode=createCompositeNode(grammarAccess.getDataTypeValueAccess().getLiteralParserRuleCall(), currentNode); 
    }
    this_Literal_0=ruleLiteral
    { 
        $current = $this_Literal_0.current; 
        currentNode = currentNode.getParent();
    }
;





// Entry rule entryRuleAnyURILiteral
entryRuleAnyURILiteral returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getAnyURILiteralRule(), currentNode); }
	 iv_ruleAnyURILiteral=ruleAnyURILiteral 
	 { $current=$iv_ruleAnyURILiteral.current; } 
	 EOF 
;

// Rule AnyURILiteral
ruleAnyURILiteral returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:

    { 
        currentNode=createCompositeNode(grammarAccess.getAnyURILiteralAccess().getLiteralParserRuleCall(), currentNode); 
    }
    this_Literal_0=ruleLiteral
    { 
        $current = $this_Literal_0.current; 
        currentNode = currentNode.getParent();
    }
;







// Entry rule entryRuleInherit
entryRuleInherit returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getInheritRule(), currentNode); }
	 iv_ruleInherit=ruleInherit 
	 { $current=$iv_ruleInherit.current; } 
	 EOF 
;

// Rule Inherit
ruleInherit returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('inherit' 
    {
        createLeafNode(grammarAccess.getInheritAccess().getInheritKeyword_0(), null); 
    }
'=' 
    {
        createLeafNode(grammarAccess.getInheritAccess().getEqualsSignKeyword_1(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getInheritAccess().getIdentifierOrKeyWordParserRuleCall_2(), currentNode); 
    }
    this_IdentifierOrKeyWord_2=ruleIdentifierOrKeyWord
    { 
        $current = $this_IdentifierOrKeyWord_2.current; 
        currentNode = currentNode.getParent();
    }
);





// Entry rule entryRuleIdentifierOrKeyWord
entryRuleIdentifierOrKeyWord returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getIdentifierOrKeyWordRule(), currentNode); }
	 iv_ruleIdentifierOrKeyWord=ruleIdentifierOrKeyWord 
	 { $current=$iv_ruleIdentifierOrKeyWord.current; } 
	 EOF 
;

// Rule IdentifierOrKeyWord
ruleIdentifierOrKeyWord returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getIdentifierOrKeyWordAccess().getIdentifierParserRuleCall_0(), currentNode); 
    }
    this_Identifier_0=ruleIdentifier
    { 
        $current = $this_Identifier_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getIdentifierOrKeyWordAccess().getKeyWordParserRuleCall_1(), currentNode); 
    }
    this_KeyWord_1=ruleKeyWord
    { 
        $current = $this_KeyWord_1.current; 
        currentNode = currentNode.getParent();
    }
);





// Entry rule entryRuleIdentifier
entryRuleIdentifier returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getIdentifierRule(), currentNode); }
	 iv_ruleIdentifier=ruleIdentifier 
	 { $current=$iv_ruleIdentifier.current; } 
	 EOF 
;

// Rule Identifier
ruleIdentifier returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((RULE_ID
    { 
    createLeafNode(grammarAccess.getIdentifierAccess().getIDTerminalRuleCall_0_0(), null); 
    }
(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getIdentifierAccess().getKeyWordKeyWordParserRuleCall_0_1_0(), currentNode); 
	    }
	    lv_keyWord_1=ruleKeyWord 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getIdentifierRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		set($current, "keyWord", lv_keyWord_1, "KeyWord", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
))
    |ruleQuotedIdentifier);





// Entry rule entryRuleQuotedIdentifier
entryRuleQuotedIdentifier returns [String current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getQuotedIdentifierRule(), currentNode); } 
	 iv_ruleQuotedIdentifier=ruleQuotedIdentifier 
	 { $current=$iv_ruleQuotedIdentifier.current.getText(); }  
	 EOF 
;

// Rule QuotedIdentifier
ruleQuotedIdentifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
	    lastConsumedDatatypeToken = $current;
    }:
(
	kw='\\' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getQuotedIdentifierAccess().getReverseSolidusKeyword_0(), null); 
    }
    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    createLeafNode(grammarAccess.getQuotedIdentifierAccess().getIDTerminalRuleCall_1(), null); 
    }
)
    ;





// Entry rule entryRuleCName
entryRuleCName returns [String current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getCNameRule(), currentNode); } 
	 iv_ruleCName=ruleCName 
	 { $current=$iv_ruleCName.current.getText(); }  
	 EOF 
;

// Rule CName
ruleCName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
	    lastConsumedDatatypeToken = $current;
    }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    createLeafNode(grammarAccess.getCNameAccess().getIDTerminalRuleCall_0(), null); 
    }

	kw=':' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getCNameAccess().getColonKeyword_1(), null); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    createLeafNode(grammarAccess.getCNameAccess().getIDTerminalRuleCall_2(), null); 
    }
)
    ;





// Entry rule entryRuleAnyName
entryRuleAnyName returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getAnyNameRule(), currentNode); }
	 iv_ruleAnyName=ruleAnyName 
	 { $current=$iv_ruleAnyName.current; } 
	 EOF 
;

// Rule AnyName
ruleAnyName returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
'*' 
    {
        createLeafNode(grammarAccess.getAnyNameAccess().getAsteriskKeyword(), null); 
    }
;





// Entry rule entryRuleLiteral
entryRuleLiteral returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getLiteralRule(), currentNode); }
	 iv_ruleLiteral=ruleLiteral 
	 { $current=$iv_ruleLiteral.current; } 
	 EOF 
;

// Rule Literal
ruleLiteral returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(RULE_STRING
    { 
    createLeafNode(grammarAccess.getLiteralAccess().getSTRINGTerminalRuleCall_0(), null); 
    }
('~' 
    {
        createLeafNode(grammarAccess.getLiteralAccess().getTildeKeyword_1_0(), null); 
    }
(	
	
	    lv_literalSegment_2=	RULE_STRING
	{
		createLeafNode(grammarAccess.getLiteralAccess().getLiteralSegmentSTRINGTerminalRuleCall_1_1_0(), "literalSegment"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLiteralRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "literalSegment", lv_literalSegment_2, "STRING", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
))+);





// Entry rule entryRuleKeyWord
entryRuleKeyWord returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getKeyWordRule(), currentNode); }
	 iv_ruleKeyWord=ruleKeyWord 
	 { $current=$iv_ruleKeyWord.current; } 
	 EOF 
;

// Rule KeyWord
ruleKeyWord returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('attribute' 
    {
        createLeafNode(grammarAccess.getKeyWordAccess().getAttributeKeyword_0(), null); 
    }

    |'default' 
    {
        createLeafNode(grammarAccess.getKeyWordAccess().getDefaultKeyword_1(), null); 
    }

    |'datatypes' 
    {
        createLeafNode(grammarAccess.getKeyWordAccess().getDatatypesKeyword_2(), null); 
    }

    |'div' 
    {
        createLeafNode(grammarAccess.getKeyWordAccess().getDivKeyword_3(), null); 
    }

    |'element' 
    {
        createLeafNode(grammarAccess.getKeyWordAccess().getElementKeyword_4(), null); 
    }

    |'empty' 
    {
        createLeafNode(grammarAccess.getKeyWordAccess().getEmptyKeyword_5(), null); 
    }

    |'external' 
    {
        createLeafNode(grammarAccess.getKeyWordAccess().getExternalKeyword_6(), null); 
    }

    |'grammar' 
    {
        createLeafNode(grammarAccess.getKeyWordAccess().getGrammarKeyword_7(), null); 
    }

    |'include' 
    {
        createLeafNode(grammarAccess.getKeyWordAccess().getIncludeKeyword_8(), null); 
    }

    |'inherit' 
    {
        createLeafNode(grammarAccess.getKeyWordAccess().getInheritKeyword_9(), null); 
    }

    |'list' 
    {
        createLeafNode(grammarAccess.getKeyWordAccess().getListKeyword_10(), null); 
    }

    |'mixed' 
    {
        createLeafNode(grammarAccess.getKeyWordAccess().getMixedKeyword_11(), null); 
    }

    |'namespace' 
    {
        createLeafNode(grammarAccess.getKeyWordAccess().getNamespaceKeyword_12(), null); 
    }

    |'notAllowed' 
    {
        createLeafNode(grammarAccess.getKeyWordAccess().getNotAllowedKeyword_13(), null); 
    }

    |'parent' 
    {
        createLeafNode(grammarAccess.getKeyWordAccess().getParentKeyword_14(), null); 
    }

    |'start' 
    {
        createLeafNode(grammarAccess.getKeyWordAccess().getStartKeyword_15(), null); 
    }

    |'string' 
    {
        createLeafNode(grammarAccess.getKeyWordAccess().getStringKeyword_16(), null); 
    }

    |'text' 
    {
        createLeafNode(grammarAccess.getKeyWordAccess().getTextKeyword_17(), null); 
    }

    |'token' 
    {
        createLeafNode(grammarAccess.getKeyWordAccess().getTokenKeyword_18(), null); 
    }
);





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


