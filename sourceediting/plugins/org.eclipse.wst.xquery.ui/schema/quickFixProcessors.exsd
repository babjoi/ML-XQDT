<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.eclipse.wst.xquery.ui" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appInfo>
         <meta.schema plugin="org.eclipse.wst.xquery.ui" id="quickFixProcessors" name="Quick Fix Processor"/>
      </appInfo>
      <documentation>
         This extension point allows to add a Quick Fix processor to offer new Quick Fixes on XQuery problems.
&lt;p&gt;
Since 3.2 an extension can specify which problem marker types it can handle. It will only get problems of these types to process.
If no handled marker type are specified, the processor will only get problems of types org.eclipse.dltk.core.problem, org.eclipse.dltk.core.buildpath_problem and org.eclipse.dltk.core.task (compatible to the behaviour prior to 3.2).
&lt;/p&gt;
&lt;p&gt;
This extension point supports the &lt;code&gt;enablement&lt;/code&gt; tag. Properties to test on are:
&lt;dl&gt;
&lt;li&gt;compilationUnit: type ISourceModule; the compilation unit the quick assist is applied on&lt;/li&gt;

&lt;li&gt;projectNatures: type Collection; all project natures of the current project&lt;/li&gt;
&lt;li&gt;sourceLevel: type String; the source compliance of the current project&lt;/li&gt;
&lt;/dl&gt;
&lt;/p&gt;
      </documentation>
   </annotation>

   <include schemaLocation="schema://org.eclipse.core.expressions/schema/expressionLanguage.exsd"/>

   <element name="extension">
      <annotation>
         <appInfo>
            <meta.element />
         </appInfo>
      </annotation>
      <complexType>
         <sequence>
            <element ref="quickFixProcessor" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  a fully qualified identifier of the target extension point
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  an optional identifier of the extension instance
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  an optional name of the extension instance
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="quickFixProcessor">
      <complexType>
         <sequence>
            <element ref="enablement" minOccurs="0" maxOccurs="1"/>
            <element ref="handledMarkerTypes" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  a unique identifier for the Quick Fix processor
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  a localized name of the Quick Fix processor
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  the name of the class that implements this Quick Fix processor. The
class must be public and implement
&lt;samp&gt;org.eclipse.dltk.ui.text.IScriptCorrectionProcessor&lt;/samp&gt;
with a public 0-argument constructor.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn=":org.eclipse.dltk.ui.text.IScriptCorrectionProcessor"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="handledMarkerTypes">
      <annotation>
         <documentation>
            Specifies the marker types of the problems this quick fix processor can handle.
If no handled marker type are specified, the processor will get problems of types org.eclipse.dltk.core.problem, org.eclipse.dltk.core.buildpath_problem and org.eclipse.dltk.core.task.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="markerType" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
      </complexType>
   </element>

   <element name="markerType">
      <complexType>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  the marker type id of the marker type that can be handled by this processor. The processor will not handle marker subtypes.
               </documentation>
               <appInfo>
                  <meta.attribute kind="identifier" basedOn="org.eclipse.core.resources.markers/@id"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         7.0
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         The following is an example of a Quick Fix processor contribution:

      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         The contributed class must implement &lt;code&gt;org.eclipse.dltk.ui.text.IScriptCorrectionProcessor&lt;/code&gt;
      </documentation>
   </annotation>


   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
      </documentation>
   </annotation>

</schema>